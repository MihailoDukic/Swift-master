{"version":3,"sources":["js/filter.js"],"names":["toggleCart","cart","gsap","timeline","to","position","right","opacity","document","querySelector","addEventListener","reversed","summary","Commerce","subscribe","event","innerHTML","data","quantity","price","total","formatted","list","Object","keys","items","forEach","id","item","product","image","name","cartMessage","message","visibility","delay","preventDefault","add","target","dataset","remove","clear"],"mappings":";AAAA,SAASA,IACDC,IAAAA,EAAOC,KAAKC,WAClBF,EAAKG,GAAG,OAAQ,CACdC,SAAU,UAEZJ,EAAKG,GAAG,sBAAuB,CAC7BE,MAAO,EACPC,QAAS,IAKXC,SAASC,cAAc,gBAAgBC,iBAAiB,QAAS,WAC/DT,EAAKU,UAAS,KAGlBH,SAASC,cAAc,SAASC,iBAAiB,QAASV,GAE1DQ,SAASE,iBAAiB,iBAAkB,WAGtCE,IAAAA,EAAUJ,SAASC,cAAc,YACjCR,EAAOO,SAASC,cAAc,eAGlCI,SAASC,UAAU,cAAe,SAAAC,GAEhCH,EAAQI,UAAmBD,OAAAA,OAAAA,EAAME,KAAKC,SAA0BH,mBAAAA,OAAAA,EAAME,KAAKE,MAAMC,MAAMC,UAF9C,QAKrCC,IAAAA,EAAO,GACXC,OAAOC,KAAKT,EAAME,KAAKQ,OAAOC,QAAQ,SAAAC,GAChCC,IAAAA,EAAOb,EAAME,KAAKQ,MAAME,GAC5BL,GAAqBM,aAAAA,OAAAA,EAAKC,QAAQC,MAAgCF,4BAAAA,OAAAA,EAAKV,SAAcU,OAAAA,OAAAA,EAAKC,QAAQE,KAAUH,OAAAA,OAAAA,EAAKT,MAAMC,MAAMC,UAAwEM,gEAAAA,OAAAA,EAArM,uBAEF1B,EAAKe,UAAYM,GAAQ,yBAIhBd,SAASC,cAAc,mBAC7BC,iBAAiB,QAAS,SAAAK,GACzBiB,IAAAA,EAAcxB,SAASC,cAAc,oBAErCwB,EAAU/B,KAAKC,WACnB8B,EAAQ7B,GAAG4B,EAAa,CACtBE,WAAY,UACZ3B,QAAS,IAEX0B,EAAQ7B,GAAG4B,EAAa,CACtBE,WAAY,SACZ3B,QAAS,EACT4B,MAAO,IAETpB,EAAMqB,iBACNvB,SAASZ,KAAKoC,IAAI,CAChBV,GAAIZ,EAAMuB,OAAOC,QAAQZ,OAM7BnB,SAASC,cAAc,eAAeC,iBAAiB,QAAS,SAAAK,GAC9DA,EAAMqB,iBACFT,IAAAA,EAAKZ,EAAMuB,OAAOC,QAAQZ,GAC1BA,GACFd,SAASZ,KAAKuC,OAAOb,KAKzBnB,SAASC,cAAc,UAAUC,iBAAiB,QAAS,WACzDG,SAASZ,KAAKwC","file":"filter.e29891c8.js","sourceRoot":"..\\public","sourcesContent":["function toggleCart() {\n  const cart = gsap.timeline();\n  cart.to('body', {\n    position: 'fixed'\n  })\n  cart.to('.cart-results-modal', {\n    right: 0,\n    opacity: 1\n  })\n\n\n\n  document.querySelector('.close-modal').addEventListener('click', () => {\n    cart.reversed(true)\n  });\n}\ndocument.querySelector('.cart').addEventListener('click', toggleCart);\n\ndocument.addEventListener('commerce.ready', () => {\n\n  // Retrieves the main containers\n  let summary = document.querySelector('.summary')\n  let cart = document.querySelector('.cart-total')\n\n  // Listens for changes to the cart\n  Commerce.subscribe('cart.change', event => {\n    // Updates the summary\n    summary.innerHTML = ` <p>${event.data.quantity} items / Total ${event.data.price.total.formatted}</p>`\n\n    // Updates the cart list\n    let list = ''\n    Object.keys(event.data.items).forEach(id => {\n      let item = event.data.items[id]\n      list += `<img src=\"${item.product.image}\"> <p class=\"item-info\">${item.quantity} x ${item.product.name} = ${item.price.total.formatted} <span class=\"remove\"><i class=\"far fa-trash-alt\"  data-id=\"${id}\"></i></span></p>`\n    })\n    cart.innerHTML = list || '<p>Cart is empty</p>'\n  })\n\n  // Adds a product to the cart when clicked\n  let link = document.querySelector('.button-addCart');\n  link.addEventListener('click', event => {\n    let cartMessage = document.querySelector('.cart-added-item');\n    // Cart Message When An Item Is Added \n    let message = gsap.timeline();\n    message.to(cartMessage, {\n      visibility: 'visible',\n      opacity: 1\n    })\n    message.to(cartMessage, {\n      visibility: 'hidden',\n      opacity: 0,\n      delay: 2\n    })\n    event.preventDefault()\n    Commerce.cart.add({\n      id: event.target.dataset.id\n    })\n  })\n\n\n  // Removes a product from the cart when clicked\n  document.querySelector('.cart-total').addEventListener('click', event => {\n    event.preventDefault()\n    let id = event.target.dataset.id\n    if (id) {\n      Commerce.cart.remove(id)\n    }\n  })\n\n  // Clears the cart\n  document.querySelector('.clear').addEventListener('click', () => {\n    Commerce.cart.clear()\n  })\n})"]}